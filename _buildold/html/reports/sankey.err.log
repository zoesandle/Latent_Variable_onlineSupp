Traceback (most recent call last):
  File "C:\Users\U727148\AppData\Local\anaconda3\envs\pymc_env\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\U727148\AppData\Local\anaconda3\envs\pymc_env\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\U727148\AppData\Roaming\Python\Python312\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\U727148\AppData\Local\anaconda3\envs\pymc_env\Lib\asyncio\base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\U727148\AppData\Local\anaconda3\envs\pymc_env\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\U727148\AppData\Local\anaconda3\envs\pymc_env\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\U727148\AppData\Local\anaconda3\envs\pymc_env\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#Making the sankey plot for cognitive variables
# 1. Create unique labels
labels = list(pd.concat([
    df_sankey_cog['cv'], 
    df_sankey_cog['ca'], 
    df_sankey_cog['cat']
]).unique())

# 2. Map labels to indices
label_map = {label: idx for idx, label in enumerate(labels)}

# 3. Define sources, targets, and values
sources = df_sankey_cog['cv'].map(label_map).tolist() + \
          df_sankey_cog['ca'].map(label_map).tolist()

targets = df_sankey_cog['ca'].map(label_map).tolist() + \
            df_sankey_cog['cat'].map(label_map).tolist()

values = df_sankey_cog['c_count'].tolist() + \
            df_sankey_cog['cat_count'].tolist()

# 4. Generate pastel colors
import random

def pastel_color():
    r = lambda: random.randint(100, 255)
    return f'rgba({r()},{r()},{r()},0.6)'

label_to_color = {label: pastel_color() for label in labels}
node_color_list = [label_to_color[label] for label in labels]

# 5. Set link colors by source node's color (first half) and middle node (second half)
link_colors = [label_to_color[df_sankey_cog['cv'].iloc[i]] 
               for i in range(len(df_sankey_cog))] + \
              [label_to_color[df_sankey_cog['ca'].iloc[i]] 
               for i in range(len(df_sankey_cog))]

# 7. Create the figure
fig = go.Figure(data=[go.Sankey(
    node=dict(
        pad=15,
        thickness=20,
        line=dict(color="black", width=0.9),
        label=labels,
        color=node_color_list,
        align="left"
    ),
    link=dict(
        source=sources,
        target=targets,
        value=values,
        color=link_colors,
        customdata=df_sankey_cog['nameyear'].tolist() * 2,
        hovertemplate='%{customdata}<extra></extra>'
    )
)])

fig.update_layout(
    title_text="Sankey Diagram for cognitive variables, assessments, and assessment types",
    font_size=16.5,
    width=1700,
    height=1200,
    hovermode='x'
)
fig.show()

fig.write_html("C:/Users/U727148/Latent_Variable_Supplement/sankey_cog_plot.html", include_plotlyjs="cdn")
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mNameError[0m                                 Traceback (most recent call last)
Cell [1;32mIn[6], line 4[0m
[0;32m      1[0m [38;5;66;03m#Making the sankey plot for cognitive variables[39;00m
[0;32m      2[0m [38;5;66;03m# 1. Create unique labels[39;00m
[0;32m      3[0m labels [38;5;241m=[39m [38;5;28mlist[39m(pd[38;5;241m.[39mconcat([
[1;32m----> 4[0m     [43mdf_sankey_cog[49m[[38;5;124m'[39m[38;5;124mcv[39m[38;5;124m'[39m], 
[0;32m      5[0m     df_sankey_cog[[38;5;124m'[39m[38;5;124mca[39m[38;5;124m'[39m], 
[0;32m      6[0m     df_sankey_cog[[38;5;124m'[39m[38;5;124mcat[39m[38;5;124m'[39m]
[0;32m      7[0m ])[38;5;241m.[39munique())
[0;32m      9[0m [38;5;66;03m# 2. Map labels to indices[39;00m
[0;32m     10[0m label_map [38;5;241m=[39m {label: idx [38;5;28;01mfor[39;00m idx, label [38;5;129;01min[39;00m [38;5;28menumerate[39m(labels)}

[1;31mNameError[0m: name 'df_sankey_cog' is not defined

